import {
  __commonJS
} from "./chunk-6TJCVOLN.js";

// node_modules/accordion-js/dist/accordion.min.js
var require_accordion_min = __commonJS({
  "node_modules/accordion-js/dist/accordion.min.js"(exports, module) {
    !function(e) {
      var t = 0, n = function e2(n2, s) {
        var i = this, r = this, o = false;
        if (Array.isArray(n2))
          return !!n2.length && n2.map(function(t2) {
            return new e2(t2, s);
          });
        var a = { init: function() {
          this.options = Object.assign({ duration: 600, ariaEnabled: true, collapse: true, showMultiple: false, onlyChildNodes: true, openOnInit: [], elementClass: "ac", triggerClass: "ac-trigger", panelClass: "ac-panel", activeClass: "is-active", beforeOpen: function() {
          }, onOpen: function() {
          }, beforeClose: function() {
          }, onClose: function() {
          } }, s);
          var e3 = "string" == typeof n2;
          this.container = e3 ? document.querySelector(n2) : n2, this.createDefinitions(), r.attachEvents();
        }, createDefinitions: function() {
          var e3 = this, n3 = this.options, s2 = n3.elementClass, i2 = n3.openOnInit, r2 = n3.onlyChildNodes ? this.container.childNodes : this.container.querySelectorAll(u(s2));
          this.elements = Array.from(r2).filter(function(e4) {
            return e4.classList && e4.classList.contains(s2);
          }), this.firstElement = this.elements[0], this.lastElement = this.elements[this.elements.length - 1], this.elements.filter(function(e4) {
            return !e4.classList.contains("js-enabled");
          }).forEach(function(n4) {
            n4.classList.add("js-enabled"), e3.generateIDs(n4), e3.setARIA(n4), e3.setTransition(n4);
            var s3 = e3.elements.indexOf(n4);
            t++, i2.includes(s3) ? e3.showElement(n4, false) : e3.closeElement(n4, false);
          });
        }, setTransition: function(e3) {
          var t2 = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], n3 = this.options, s2 = n3.duration, i2 = n3.panelClass, r2 = e3.querySelector(u(i2)), o2 = l("transitionDuration");
          r2.style[o2] = t2 ? null : "".concat(s2, "ms");
        }, generateIDs: function(e3) {
          var n3 = this.options, s2 = n3.triggerClass, i2 = n3.panelClass, r2 = e3.querySelector(u(s2)), o2 = e3.querySelector(u(i2));
          e3.setAttribute("id", e3.id || "ac-".concat(t)), r2.setAttribute("id", r2.id || "ac-trigger-".concat(t)), o2.setAttribute("id", o2.id || "ac-panel-".concat(t));
        }, removeIDs: function(e3) {
          var t2 = this.options, n3 = t2.triggerClass, s2 = t2.panelClass, i2 = e3.querySelector(u(n3)), r2 = e3.querySelector(u(s2));
          e3.id.startsWith("ac-") && e3.removeAttribute("id"), i2.id.startsWith("ac-") && i2.removeAttribute("id"), r2.id.startsWith("ac-") && r2.removeAttribute("id");
        }, setARIA: function(e3) {
          var t2 = this.options, n3 = t2.ariaEnabled, s2 = t2.triggerClass, i2 = t2.panelClass;
          if (n3) {
            var r2 = e3.querySelector(u(s2)), o2 = e3.querySelector(u(i2));
            r2.setAttribute("role", "button"), r2.setAttribute("aria-controls", o2.id), r2.setAttribute("aria-disabled", false), r2.setAttribute("aria-expanded", false), o2.setAttribute("role", "region"), o2.setAttribute("aria-labelledby", r2.id);
          }
        }, updateARIA: function(e3, t2) {
          var n3 = t2.ariaExpanded, s2 = t2.ariaDisabled, i2 = this.options, r2 = i2.ariaEnabled, o2 = i2.triggerClass;
          if (r2) {
            var a2 = e3.querySelector(u(o2));
            a2.setAttribute("aria-expanded", n3), a2.setAttribute("aria-disabled", s2);
          }
        }, removeARIA: function(e3) {
          var t2 = this.options, n3 = t2.ariaEnabled, s2 = t2.triggerClass, i2 = t2.panelClass;
          if (n3) {
            var r2 = e3.querySelector(u(s2)), o2 = e3.querySelector(u(i2));
            r2.removeAttribute("role"), r2.removeAttribute("aria-controls"), r2.removeAttribute("aria-disabled"), r2.removeAttribute("aria-expanded"), o2.removeAttribute("role"), o2.removeAttribute("aria-labelledby");
          }
        }, focus: function(e3, t2) {
          e3.preventDefault();
          var n3 = this.options.triggerClass;
          t2.querySelector(u(n3)).focus();
        }, focusFirstElement: function(e3) {
          this.focus(e3, this.firstElement), this.currFocusedIdx = 0;
        }, focusLastElement: function(e3) {
          this.focus(e3, this.lastElement), this.currFocusedIdx = this.elements.length - 1;
        }, focusNextElement: function(e3) {
          var t2 = this.currFocusedIdx + 1;
          if (t2 > this.elements.length - 1)
            return this.focusFirstElement(e3);
          this.focus(e3, this.elements[t2]), this.currFocusedIdx = t2;
        }, focusPrevElement: function(e3) {
          var t2 = this.currFocusedIdx - 1;
          if (t2 < 0)
            return this.focusLastElement(e3);
          this.focus(e3, this.elements[t2]), this.currFocusedIdx = t2;
        }, showElement: function(e3) {
          var t2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n3 = this.options, s2 = n3.panelClass, i2 = n3.activeClass, r2 = n3.collapse, o2 = n3.beforeOpen;
          t2 && o2(e3);
          var a2 = e3.querySelector(u(s2)), l2 = a2.scrollHeight;
          e3.classList.add(i2), requestAnimationFrame(function() {
            requestAnimationFrame(function() {
              a2.style.height = t2 ? "".concat(l2, "px") : "auto";
            });
          }), this.updateARIA(e3, { ariaExpanded: true, ariaDisabled: !r2 });
        }, closeElement: function(e3) {
          var t2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n3 = this.options, s2 = n3.panelClass, i2 = n3.activeClass, r2 = n3.beforeClose, o2 = e3.querySelector(u(s2)), a2 = o2.scrollHeight;
          e3.classList.remove(i2), t2 ? (r2(e3), requestAnimationFrame(function() {
            o2.style.height = "".concat(a2, "px"), requestAnimationFrame(function() {
              o2.style.height = 0;
            });
          })) : o2.style.height = 0, this.updateARIA(e3, { ariaExpanded: false, ariaDisabled: false });
        }, toggleElement: function(e3) {
          var t2 = this.options, n3 = t2.activeClass, s2 = t2.collapse, i2 = e3.classList.contains(n3);
          if (!i2 || s2)
            return i2 ? this.closeElement(e3) : this.showElement(e3);
        }, closeElements: function() {
          var e3 = this, t2 = this.options, n3 = t2.activeClass;
          t2.showMultiple || this.elements.forEach(function(t3, s2) {
            t3.classList.contains(n3) && s2 !== e3.currFocusedIdx && e3.closeElement(t3);
          });
        }, handleClick: function(e3) {
          var t2 = this, n3 = e3.currentTarget;
          this.elements.forEach(function(s2, i2) {
            s2.contains(n3) && "A" !== e3.target.nodeName && (t2.currFocusedIdx = i2, t2.closeElements(), t2.focus(e3, s2), t2.toggleElement(s2));
          });
        }, handleKeydown: function(e3) {
          switch (e3.key) {
            case "ArrowUp":
              return this.focusPrevElement(e3);
            case "ArrowDown":
              return this.focusNextElement(e3);
            case "Home":
              return this.focusFirstElement(e3);
            case "End":
              return this.focusLastElement(e3);
            default:
              return null;
          }
        }, handleFocus: function(e3) {
          var t2 = e3.currentTarget, n3 = this.elements.find(function(e4) {
            return e4.contains(t2);
          });
          this.currFocusedIdx = this.elements.indexOf(n3);
        }, handleTransitionEnd: function(e3) {
          if (e3.stopPropagation(), "height" === e3.propertyName) {
            var t2 = this.options, n3 = t2.onOpen, s2 = t2.onClose, i2 = e3.currentTarget, r2 = parseInt(i2.style.height), o2 = this.elements.find(function(e4) {
              return e4.contains(i2);
            });
            r2 > 0 ? (i2.style.height = "auto", n3(o2)) : s2(o2);
          }
        } };
        this.attachEvents = function() {
          if (!o) {
            var e3 = a.options, t2 = e3.triggerClass, n3 = e3.panelClass;
            a.handleClick = a.handleClick.bind(a), a.handleKeydown = a.handleKeydown.bind(a), a.handleFocus = a.handleFocus.bind(a), a.handleTransitionEnd = a.handleTransitionEnd.bind(a), a.elements.forEach(function(e4) {
              var s2 = e4.querySelector(u(t2)), i2 = e4.querySelector(u(n3));
              s2.addEventListener("click", a.handleClick), s2.addEventListener("keydown", a.handleKeydown), s2.addEventListener("focus", a.handleFocus), i2.addEventListener("webkitTransitionEnd", a.handleTransitionEnd), i2.addEventListener("transitionend", a.handleTransitionEnd);
            }), o = true;
          }
        }, this.detachEvents = function() {
          if (o) {
            var e3 = a.options, t2 = e3.triggerClass, n3 = e3.panelClass;
            a.elements.forEach(function(e4) {
              var s2 = e4.querySelector(u(t2)), i2 = e4.querySelector(u(n3));
              s2.removeEventListener("click", a.handleClick), s2.removeEventListener("keydown", a.handleKeydown), s2.removeEventListener("focus", a.handleFocus), i2.removeEventListener("webkitTransitionEnd", a.handleTransitionEnd), i2.removeEventListener("transitionend", a.handleTransitionEnd);
            }), o = false;
          }
        }, this.toggle = function(e3) {
          var t2 = a.elements[e3];
          t2 && a.toggleElement(t2);
        }, this.open = function(e3) {
          var t2 = a.elements[e3];
          t2 && a.showElement(t2);
        }, this.openAll = function() {
          var e3 = a.options, t2 = e3.activeClass, n3 = e3.onOpen;
          a.elements.forEach(function(e4) {
            e4.classList.contains(t2) || (a.showElement(e4, false), n3(e4));
          });
        }, this.close = function(e3) {
          var t2 = a.elements[e3];
          t2 && a.closeElement(t2);
        }, this.closeAll = function() {
          var e3 = a.options, t2 = e3.activeClass, n3 = e3.onClose;
          a.elements.forEach(function(e4) {
            e4.classList.contains(t2) && (a.closeElement(e4, false), n3(e4));
          });
        }, this.destroy = function() {
          i.detachEvents(), i.openAll(), a.elements.forEach(function(e3) {
            a.removeIDs(e3), a.removeARIA(e3), a.setTransition(e3, true);
          }), o = true;
        }, this.update = function() {
          a.createDefinitions(), i.detachEvents(), i.attachEvents();
        };
        var l = function(e3) {
          return "string" == typeof document.documentElement.style[e3] ? e3 : (e3 = c(e3), e3 = "webkit".concat(e3));
        }, c = function(e3) {
          return e3.charAt(0).toUpperCase() + e3.slice(1);
        }, u = function(e3) {
          return ".".concat(CSS.escape(e3));
        };
        a.init();
      };
      "undefined" != typeof module && void 0 !== module.exports ? module.exports = n : e.Accordion = n;
    }(window);
  }
});
export default require_accordion_min();
//# sourceMappingURL=accordion-js.js.map
